version: "3.9"

networks:
  net:
    driver: bridge

services:
  checkout:
    image: checkout
    build: ./checkout/
    ports:
      - "8080:8080"
      - "8090:8090"
    networks:
      - net
    depends_on:
      checkout-pgbouncer:
        condition: service_started
    env_file:
      - ./checkout/.env
    environment:
      - JAEGER_AGENT_HOST=jaeger
    restart: unless-stopped

  checkout-pgbouncer:
    image: bitnami/pgbouncer:1.18.0
    ports:
      - "6432:6432"
    networks:
      - net
    env_file:
      - ./checkout/.env
    environment:
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: "extra_float_digits"
    restart: unless-stopped
    depends_on:
      checkout-postgres:
        condition: service_started

  checkout-postgres:
    image: postgres:15.2
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: "postgres-checkout"
    volumes:
      - ./checkout/.pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - net
    env_file:
      - ./checkout/.env

  loms:
    image: loms
    build: ./loms/
    ports:
      - "8081:8081"
      - "8091:8091"
    networks:
      - net
    depends_on:
      loms-pgbouncer:
        condition: service_started
    env_file:
      - ./loms/.env
    environment:
      - JAEGER_AGENT_HOST=jaeger
    restart: unless-stopped

  loms-pgbouncer:
    image: bitnami/pgbouncer:1.18.0
    ports:
      - "8432:8432"
    networks:
      - net
    restart: unless-stopped
    env_file:
      - ./loms/.env
    environment:
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: "extra_float_digits"
    depends_on:
      loms-postgres:
        condition: service_started

  loms-postgres:
    image: postgres:15.2
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    container_name: 'postgres-loms'
    volumes:
      - ./loms/.pgdata:/var/lib/postgresql/data
    ports:
      - "7432:7432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - net
    env_file:
      - ./loms/.env

  notification:
    image: notifications
    build: ./notifications/
    ports:
      - "8092:8092"
    networks:
     - net
    environment:
     - JAEGER_AGENT_HOST=jaeger
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.18
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"
    networks:
      - net
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml
    networks:
      - net
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - ./data:/var/lib/grafana
    links:
      - prometheus
    networks:
      - net
    restart: unless-stopped
